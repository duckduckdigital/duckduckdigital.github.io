{"version":3,"sources":["webpack:///./src/components/card.tsx","webpack:///./src/components/hero.tsx","webpack:///./src/pages/index.tsx","webpack:///./node_modules/@chakra-ui/layout/dist/esm/flex.js"],"names":["Card","node","frontmatter","fields","slug","title","date","key","as","GatsbyLink","to","textDecoration","Hero","BlogIndex","props","data","useStaticQuery","siteTitle","site","siteMetadata","posts","allMarkdownRemark","edges","location","keywords","spacing","size","map","_extends","Object","assign","target","i","arguments","length","source","prototype","hasOwnProperty","call","apply","this","Flex","ref","direction","align","justify","wrap","basis","grow","shrink","rest","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","styles","display","flexDirection","alignItems","justifyContent","flexWrap","flexBasis","flexGrow","flexShrink","div","__css","displayName"],"mappings":"+MAKaA,EAAO,SAAC,GAAuC,IAArCC,EAAqC,EAArCA,KACfC,EAAcD,EAAMC,YACpBC,EAASF,EAAME,OACfC,EAAOD,EAAOC,KACdC,EAAQH,EAAYG,OAASF,EAAOC,KACpCE,EAAOJ,aAAH,EAAGA,EAAaI,KAE1B,OACE,kBAAC,IAAD,CAAKC,IAAKH,GACR,kBAAC,IAAD,CAAMI,GAAIC,OAAYC,GAAIN,EAAMO,eAAgB,UAC7CL,EADH,IACUD,K,wBCZHO,EAAO,WAClB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,iBCuDOC,UAlDG,SAACC,GACjB,IAAMC,EAAOC,yBAAe,aAyBtBC,EAAYF,EAAKG,KAAKC,aAAad,MACnCe,EAAQL,EAAKM,kBAAkBC,MAErC,OACE,kBAAC,IAAD,CAAQC,SAAUT,EAAMS,SAAUlB,MAAOY,GACvC,kBAAC,IAAD,CACEZ,MAAM,YACNmB,SAAU,CAAC,OAAD,iCAEZ,kBAAC,IAAD,CAAOC,QAAS,IACd,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAOA,QAAS,GACd,kBAAC,IAAD,CAASjB,GAAI,KAAMkB,KAAM,MAAzB,WAGCN,EAAMO,KAAI,gBAAG1B,EAAH,EAAGA,KAAH,OACT,kBAAC,EAAD,CAAMA,KAAMA,Y,kCCtDxB,+FAAS2B,IAeP,OAdAA,EAAWC,OAAOC,QAAU,SAAUC,GACpC,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CACzC,IAAIG,EAASF,UAAUD,GAEvB,IAAK,IAAIzB,KAAO4B,EACVN,OAAOO,UAAUC,eAAeC,KAAKH,EAAQ5B,KAC/CwB,EAAOxB,GAAO4B,EAAO5B,IAK3B,OAAOwB,IAGOQ,MAAMC,KAAMP,WA8BvB,IAAIQ,EAAoB,aAAW,SAAU3B,EAAO4B,GACzD,IAAIC,EAAY7B,EAAM6B,UAClBC,EAAQ9B,EAAM8B,MACdC,EAAU/B,EAAM+B,QAChBC,EAAOhC,EAAMgC,KACbC,EAAQjC,EAAMiC,MACdC,EAAOlC,EAAMkC,KACbC,EAASnC,EAAMmC,OACfC,EAnCN,SAAuCf,EAAQgB,GAC7C,GAAc,MAAVhB,EAAgB,MAAO,GAC3B,IAEI5B,EAAKyB,EAFLD,EAAS,GACTqB,EAAavB,OAAOwB,KAAKlB,GAG7B,IAAKH,EAAI,EAAGA,EAAIoB,EAAWlB,OAAQF,IACjCzB,EAAM6C,EAAWpB,GACbmB,EAASG,QAAQ/C,IAAQ,IAC7BwB,EAAOxB,GAAO4B,EAAO5B,IAGvB,OAAOwB,EAuBIwB,CAA8BzC,EAAO,CAAC,YAAa,QAAS,UAAW,OAAQ,QAAS,OAAQ,WAEvG0C,EAAS,CACXC,QAAS,OACTC,cAAef,EACfgB,WAAYf,EACZgB,eAAgBf,EAChBgB,SAAUf,EACVgB,UAAWf,EACXgB,SAAUf,EACVgB,WAAYf,GAEd,OAAoB,gBAAoB,IAAOgB,IAAKrC,EAAS,CAC3Dc,IAAKA,EACLwB,MAAOV,GACNN,OAGD,MACFT,EAAK0B,YAAc","file":"component---src-pages-index-tsx-1779117a0fb624d12f71.js","sourcesContent":["import React from \"react\"\r\nimport { Link as GatsbyLink } from \"gatsby\"\r\nimport { MarkdownRemark } from \"../graphql-types\"\r\nimport { Box, Link } from \"@chakra-ui/react\"\r\n\r\nexport const Card = ({ node }: { node: MarkdownRemark }) => {\r\n  const frontmatter = node!.frontmatter!\r\n  const fields = node!.fields!\r\n  const slug = fields.slug!\r\n  const title = frontmatter.title || fields.slug\r\n  const date = frontmatter?.date\r\n\r\n  return (\r\n    <Box key={slug}>\r\n      <Link as={GatsbyLink} to={slug} textDecoration={\"dotted\"}>\r\n        {date} {title}\r\n      </Link>\r\n    </Box>\r\n  )\r\n}\r\n","import { Box, Flex, Text } from \"@chakra-ui/react\"\r\nimport React from \"react\"\r\n\r\nexport const Hero = () => {\r\n  return (\r\n    <Flex>\r\n      <Box>\r\n        <Text>hello</Text>\r\n      </Box>\r\n    </Flex>\r\n  )\r\n}\r\n","import { graphql, PageRendererProps, useStaticQuery } from \"gatsby\"\r\nimport React from \"react\"\r\nimport { Bio } from \"../components/bio\"\r\nimport { Layout } from \"../components/layout\"\r\nimport { SEO } from \"../components/seo\"\r\nimport { MarkdownRemark } from \"../graphql-types\"\r\nimport { Heading, Stack } from \"@chakra-ui/react\"\r\nimport { Card } from \"../components/card\"\r\nimport { Hero } from \"../components/hero\"\r\n\r\ntype Props = PageRendererProps\r\n\r\nconst BlogIndex = (props: Props) => {\r\n  const data = useStaticQuery(graphql`\r\n    query {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n        }\r\n      }\r\n      allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\r\n        edges {\r\n          node {\r\n            excerpt\r\n            fields {\r\n              slug\r\n            }\r\n            frontmatter {\r\n              date(formatString: \"MMMM DD, YYYY\")\r\n              title\r\n              description\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  const siteTitle = data.site.siteMetadata.title\r\n  const posts = data.allMarkdownRemark.edges\r\n\r\n  return (\r\n    <Layout location={props.location} title={siteTitle}>\r\n      <SEO\r\n        title=\"All posts\"\r\n        keywords={[`blog`, `gatsby`, `javascript`, `react`]}\r\n      />\r\n      <Stack spacing={12}>\r\n        <Hero />\r\n        <Stack spacing={4}>\r\n          <Heading as={\"h4\"} size={\"md\"}>\r\n            Updates\r\n          </Heading>\r\n          {posts.map(({ node }: { node: MarkdownRemark }) => (\r\n            <Card node={node} />\r\n          ))}\r\n        </Stack>\r\n      </Stack>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default BlogIndex\r\n","function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { __DEV__ } from \"@chakra-ui/utils\";\nimport * as React from \"react\";\n/**\n * React component used to create flexbox layouts.\n *\n * It renders a `div` with `display: flex` and\n * comes with helpful style shorthand.\n *\n * @see Docs https://chakra-ui.com/flex\n */\n\nexport var Flex = /*#__PURE__*/forwardRef(function (props, ref) {\n  var direction = props.direction,\n      align = props.align,\n      justify = props.justify,\n      wrap = props.wrap,\n      basis = props.basis,\n      grow = props.grow,\n      shrink = props.shrink,\n      rest = _objectWithoutPropertiesLoose(props, [\"direction\", \"align\", \"justify\", \"wrap\", \"basis\", \"grow\", \"shrink\"]);\n\n  var styles = {\n    display: \"flex\",\n    flexDirection: direction,\n    alignItems: align,\n    justifyContent: justify,\n    flexWrap: wrap,\n    flexBasis: basis,\n    flexGrow: grow,\n    flexShrink: shrink\n  };\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({\n    ref: ref,\n    __css: styles\n  }, rest));\n});\n\nif (__DEV__) {\n  Flex.displayName = \"Flex\";\n}"],"sourceRoot":""}